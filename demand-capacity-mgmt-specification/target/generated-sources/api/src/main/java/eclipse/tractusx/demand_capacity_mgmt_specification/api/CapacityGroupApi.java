/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package eclipse.tractusx.demand_capacity_mgmt_specification.api;

import eclipse.tractusx.demand_capacity_mgmt_specification.model.CapacityGroupDefaultViewResponse;
import eclipse.tractusx.demand_capacity_mgmt_specification.model.CapacityGroupRequest;
import eclipse.tractusx.demand_capacity_mgmt_specification.model.CapacityGroupResponse;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Tag(name = "CapacityGroup", description = "the CapacityGroup API")
public interface CapacityGroupApi {

    /**
     * GET /capacityGroup : capacityGroup
     *
     * @return CapacityGroupResponse (status code 200)
     */
    @Operation(
        operationId = "getCapacityGroup",
        summary = "capacityGroup",
        tags = { "capacityGroup" },
        responses = {
            @ApiResponse(responseCode = "200", description = "CapacityGroupResponse", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CapacityGroupDefaultViewResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/capacityGroup",
        produces = { "application/json" }
    )
    ResponseEntity<List<CapacityGroupDefaultViewResponse>> getCapacityGroup(
        
    ) throws Exception;


    /**
     * POST /capacityGroup : create capacityGroup
     *
     * @param capacityGroupRequest  (required)
     * @return General greeting (status code 200)
     */
    @Operation(
        operationId = "postCapacityGroup",
        summary = "create capacityGroup",
        tags = { "capacityGroup" },
        responses = {
            @ApiResponse(responseCode = "200", description = "General greeting", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CapacityGroupResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/capacityGroup",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<CapacityGroupResponse> postCapacityGroup(
        @Parameter(name = "CapacityGroupRequest", description = "", required = true) @Valid @RequestBody CapacityGroupRequest capacityGroupRequest
    ) throws Exception;

}
